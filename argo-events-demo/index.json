{
  "title": "Argo events : une architecture asynchrone, orientée évènements, sauce Cloud Native",
  "description": "Argo Events permet d'apporter une mécanique évènementielle de manière simple et contrôlée au sein de votre cluster Kubernetes.",
  "difficulty": "Intermediate",
  "time": "30 minutes",
  "icon": "fa-bars-staggered",
  "details": {
    "assets": {
      "host01": [
          {"file": "wait.sh", "chmod": "+x"},
          {"file": "ingress.yaml"},
          {"file": "redis.yaml"},
          {"file": "deployment.yaml"},
          {"file": "deployment-flask.yaml"},
          {"file": "addNamespace.png"},
          {"file": "clickOnEvents.png"},
          {"file": "anger.jpg"},
          {"file": "disgust.jpg"},
          {"file": "fear.jpg"},
          {"file": "joy.jpg"},
          {"file": "sadness.jpg"},
          {"file": "downloader/Dockerfile", "target":"downloader/"},
          {"file": "downloader/run.sh", "target":"downloader/"},
          {"file": "tesseract/Dockerfile", "target":"tesseract/"},
          {"file": "tesseract/analyse.py", "target":"tesseract/"},
          {"file": "flask/Dockerfile", "target":"flask/"},
          {"file": "flask/app.py", "target":"flask/"}
      ]
  },
    "steps": [
      {
        "title": "Installer Argo events",
        "text": "1-installation.md"
      },
      {
        "title": "Notre premier event",
        "text": "2-webhook.md",
        "courseData": "background.sh"
      },
      {
        "title": "Découvrir d'autres events : Redis",
        "text": "3-redis.md",
        "courseData": "prepareComplexArch.sh"
      },
      {
        "title": "Découvrir d'autres events : Minio",
        "text": "4-minio.md"
      },
      {
        "title": "Une architecture complexe",
        "text": "5-complex.md"
      }
    ],
    "intro": {
      "text": "intro.md",
      "code": "waitForKub.sh"
    },
    "finish": {
      "text": "finish.md"
    }
  },
  "environment": {
    "uilayout": "terminal-iframe-split",
    "uimessage1": "\u001b[32mTerminal interactif - K8S Master.\u001b[m\r\n"
},
  "backend": {
    "imageid": "kubernetes-cluster-running:1.18",
    "port": 80
  }
}
